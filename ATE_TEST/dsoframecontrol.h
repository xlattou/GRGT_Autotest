#if !defined(AFX_DSOFRAMECONTROL_H__F3EC486B_5C1D_4B7F_BA7F_5705FA159326__INCLUDED_)
#define AFX_DSOFRAMECONTROL_H__F3EC486B_5C1D_4B7F_BA7F_5705FA159326__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CDSOFrameControl wrapper class

class CDSOFrameControl : public CWnd
{
protected:
	DECLARE_DYNCREATE(CDSOFrameControl)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x460182, 0x9e5e, 0x11d5, { 0xb7, 0xc8, 0xb8, 0x26, 0x90, 0x41, 0xdd, 0x57 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	void Activate();
	LPDISPATCH GetActiveDocument();
	void CreateNew(LPCTSTR ProgIdOrTemplate);
	void Open(const VARIANT& Document, const VARIANT& ReadOnly, const VARIANT& ProgId, const VARIANT& WebUsername, const VARIANT& WebPassword);
	void Save(const VARIANT& SaveAsDocument, const VARIANT& OverwriteExisting, const VARIANT& WebUsername, const VARIANT& WebPassword);
	void Close();
	void SetCaption(LPCTSTR lpszNewValue);
	CString GetCaption();
	void SetTitlebar(BOOL bNewValue);
	BOOL GetTitlebar();
	void SetToolbars(BOOL bNewValue);
	BOOL GetToolbars();
	void SetModalState(BOOL bNewValue);
	BOOL GetModalState();
	void ShowDialog(long DlgType);
	void SetEnableFileCommand(long Item, BOOL bNewValue);
	BOOL GetEnableFileCommand(long Item);
	void SetBorderStyle(long nNewValue);
	long GetBorderStyle();
	void SetBorderColor(unsigned long newValue);
	unsigned long GetBorderColor();
	void SetBackColor(unsigned long newValue);
	unsigned long GetBackColor();
	void SetForeColor(unsigned long newValue);
	unsigned long GetForeColor();
	void SetTitlebarColor(unsigned long newValue);
	unsigned long GetTitlebarColor();
	void SetTitlebarTextColor(unsigned long newValue);
	unsigned long GetTitlebarTextColor();
	void ExecOleCommand(long OLECMDID, const VARIANT& Options, VARIANT* vInParam, VARIANT* vInOutParam);
	void SetMenubar(BOOL bNewValue);
	BOOL GetMenubar();
	void SetHostName(LPCTSTR lpszNewValue);
	CString GetHostName();
	CString GetDocumentFullName();
	void PrintOut(const VARIANT& PromptUser, const VARIANT& PrinterName, const VARIANT& Copies, const VARIANT& FromPage, const VARIANT& ToPage, const VARIANT& OutputFile);
	void PrintPreview();
	void PrintPreviewExit();
	BOOL GetIsReadOnly();
	BOOL GetIsDirty();
	void SetLockServer(BOOL bNewValue);
	BOOL GetLockServer();
	VARIANT GetDataObjectContent(const VARIANT& ClipFormatNameOrNumber);
	void SetDataObjectContent(const VARIANT& ClipFormatNameOrNumber, const VARIANT& DataByteArray);
	void SetActivationPolicy(long nNewValue);
	long GetActivationPolicy();
	void SetFrameHookPolicy(long nNewValue);
	long GetFrameHookPolicy();
	void SetMenuAccelerators(BOOL bNewValue);
	BOOL GetMenuAccelerators();
	void SetEventsEnabled(BOOL bNewValue);
	BOOL GetEventsEnabled();
	CString GetDocumentName();
	CString GetColItem(int nID);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_DSOFRAMECONTROL_H__F3EC486B_5C1D_4B7F_BA7F_5705FA159326__INCLUDED_)
