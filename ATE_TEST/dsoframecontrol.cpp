// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "dsoframecontrol.h"

/////////////////////////////////////////////////////////////////////////////
// CDSOFrameControl

IMPLEMENT_DYNCREATE(CDSOFrameControl, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CDSOFrameControl properties

/////////////////////////////////////////////////////////////////////////////
// CDSOFrameControl operations

void CDSOFrameControl::Activate()
{
	InvokeHelper(0x10001, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

LPDISPATCH CDSOFrameControl::GetActiveDocument()
{
	LPDISPATCH result;
	InvokeHelper(0x10002, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::CreateNew(LPCTSTR ProgIdOrTemplate)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x10003, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ProgIdOrTemplate);
}

void CDSOFrameControl::Open(const VARIANT& Document, const VARIANT& ReadOnly, const VARIANT& ProgId, const VARIANT& WebUsername, const VARIANT& WebPassword)
{
	static BYTE parms[] =
		VTS_VARIANT VTS_VARIANT VTS_VARIANT VTS_VARIANT VTS_VARIANT;
	InvokeHelper(0x10004, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &Document, &ReadOnly, &ProgId, &WebUsername, &WebPassword);
}

void CDSOFrameControl::Save(const VARIANT& SaveAsDocument, const VARIANT& OverwriteExisting, const VARIANT& WebUsername, const VARIANT& WebPassword)
{
	static BYTE parms[] =
		VTS_VARIANT VTS_VARIANT VTS_VARIANT VTS_VARIANT;
	InvokeHelper(0x10005, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &SaveAsDocument, &OverwriteExisting, &WebUsername, &WebPassword);
}

void CDSOFrameControl::Close()
{
	InvokeHelper(0x10009, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CDSOFrameControl::SetCaption(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1000a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CDSOFrameControl::GetCaption()
{
	CString result;
	InvokeHelper(0x1000a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetTitlebar(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1000b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CDSOFrameControl::GetTitlebar()
{
	BOOL result;
	InvokeHelper(0x1000b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetToolbars(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1000c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CDSOFrameControl::GetToolbars()
{
	BOOL result;
	InvokeHelper(0x1000c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetModalState(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1000d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CDSOFrameControl::GetModalState()
{
	BOOL result;
	InvokeHelper(0x1000d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::ShowDialog(long DlgType)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1000e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 DlgType);
}

void CDSOFrameControl::SetEnableFileCommand(long Item, BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0x1000f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 Item, bNewValue);
}

BOOL CDSOFrameControl::GetEnableFileCommand(long Item)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1000f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, parms,
		Item);
	return result;
}

void CDSOFrameControl::SetBorderStyle(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(DISPID_BORDERSTYLE, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CDSOFrameControl::GetBorderStyle()
{
	long result;
	InvokeHelper(DISPID_BORDERSTYLE, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetBorderColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xfffffe09, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CDSOFrameControl::GetBorderColor()
{
	unsigned long result;
	InvokeHelper(0xfffffe09, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetBackColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CDSOFrameControl::GetBackColor()
{
	unsigned long result;
	InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetForeColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(DISPID_FORECOLOR, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CDSOFrameControl::GetForeColor()
{
	unsigned long result;
	InvokeHelper(DISPID_FORECOLOR, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetTitlebarColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x10010, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CDSOFrameControl::GetTitlebarColor()
{
	unsigned long result;
	InvokeHelper(0x10010, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetTitlebarTextColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x10011, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CDSOFrameControl::GetTitlebarTextColor()
{
	unsigned long result;
	InvokeHelper(0x10011, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::ExecOleCommand(long OLECMDID, const VARIANT& Options, VARIANT* vInParam, VARIANT* vInOutParam)
{
	static BYTE parms[] =
		VTS_I4 VTS_VARIANT VTS_PVARIANT VTS_PVARIANT;
	InvokeHelper(0x10012, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 OLECMDID, &Options, vInParam, vInOutParam);
}

void CDSOFrameControl::SetMenubar(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x10013, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CDSOFrameControl::GetMenubar()
{
	BOOL result;
	InvokeHelper(0x10013, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetHostName(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x10014, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CDSOFrameControl::GetHostName()
{
	CString result;
	InvokeHelper(0x10014, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CDSOFrameControl::GetDocumentFullName()
{
	CString result;
	InvokeHelper(0x10015, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::PrintOut(const VARIANT& PromptUser, const VARIANT& PrinterName, const VARIANT& Copies, const VARIANT& FromPage, const VARIANT& ToPage, const VARIANT& OutputFile)
{
	static BYTE parms[] =
		VTS_VARIANT VTS_VARIANT VTS_VARIANT VTS_VARIANT VTS_VARIANT VTS_VARIANT;
	InvokeHelper(0x10016, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &PromptUser, &PrinterName, &Copies, &FromPage, &ToPage, &OutputFile);
}

void CDSOFrameControl::PrintPreview()
{
	InvokeHelper(0x10017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CDSOFrameControl::PrintPreviewExit()
{
	InvokeHelper(0x10018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CDSOFrameControl::GetIsReadOnly()
{
	BOOL result;
	InvokeHelper(0x10019, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CDSOFrameControl::GetIsDirty()
{
	BOOL result;
	InvokeHelper(0x1001a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetLockServer(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1001b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CDSOFrameControl::GetLockServer()
{
	BOOL result;
	InvokeHelper(0x1001b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

VARIANT CDSOFrameControl::GetDataObjectContent(const VARIANT& ClipFormatNameOrNumber)
{
	VARIANT result;
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x1001c, DISPATCH_METHOD, VT_VARIANT, (void*)&result, parms,
		&ClipFormatNameOrNumber);
	return result;
}

void CDSOFrameControl::SetDataObjectContent(const VARIANT& ClipFormatNameOrNumber, const VARIANT& DataByteArray)
{
	static BYTE parms[] =
		VTS_VARIANT VTS_VARIANT;
	InvokeHelper(0x1001d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &ClipFormatNameOrNumber, &DataByteArray);
}

void CDSOFrameControl::SetActivationPolicy(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1001e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CDSOFrameControl::GetActivationPolicy()
{
	long result;
	InvokeHelper(0x1001e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetFrameHookPolicy(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1001f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CDSOFrameControl::GetFrameHookPolicy()
{
	long result;
	InvokeHelper(0x1001f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetMenuAccelerators(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x10020, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CDSOFrameControl::GetMenuAccelerators()
{
	BOOL result;
	InvokeHelper(0x10020, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CDSOFrameControl::SetEventsEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x10021, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CDSOFrameControl::GetEventsEnabled()
{
	BOOL result;
	InvokeHelper(0x10021, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

CString CDSOFrameControl::GetDocumentName()
{
	CString result;
	InvokeHelper(0x10022, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CDSOFrameControl::GetColItem(int nID)
{
	CString result;
	InvokeHelper(nID, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
